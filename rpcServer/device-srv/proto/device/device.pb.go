// Code generated by protoc-gen-go.
// source: beaconCloud/rpcServer/device-srv/proto/device/device.proto
// DO NOT EDIT!

/*
Package device is a generated protocol buffer package.

It is generated from these files:
	beaconCloud/rpcServer/device-srv/proto/device/device.proto

It has these top-level messages:
	Result
	InitDBRequest
	InitDBResponse
	BeaconSetting
	UpdateBeaconApplyVersionRequest
	UpdateBeaconApplyVersionResponse
	AddBeaconSettingRequest
	AddBeaconSettingResponse
	ReadBeaconSetByObjectIdAndVersionRequest
	ReadBeaconSetByObjectIdAndVersionResponse
	ReadBeaconSettingRequest
	ReadBeaconSettingResponse
	Gateway
	AddGatewayRequest
	AddGatewayResponse
	ReadOneGatewayRequest
	ReadOneGatewayResponse
	ReadAllGatewayRequest
	ReadAllGatewayResponse
	ReadPagingGatewayRequest
	ReadPagingGatewayResponse
	DeleteGatewayRequest
	DeleteGatewayResponse
	UpdateGatewayRequest
	UpdateGatewayResponse
	UpdateGatewayStatusRequest
	UpdateGatewayStatusResponse
	Beacon
	UpdateBeaconRequest
	UpdateBeaconResponse
	ReadPagingBeaconRequest
	ReadPagingBeaconResponse
	AddBeaconRequest
	AddBeaconResponse
	DeleteBeaconRequest
	DeleteBeaconResponse
	ReadOneBeaconRequest
	ReadOneBeaconResponse
	ReadAllBeaconRequest
	ReadAllBeaconResponse
	UpdateBeaconApplyStatusRequest
	UpdateBeaconApplyStatusResponse
*/
package device

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Result struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Detail string `protobuf:"bytes,3,opt,name=detail" json:"detail,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// >>>>>>>>>>>>>> Init DB >>>>>>>>>>>>>>>>>>>>>>>>
type InitDBRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
}

func (m *InitDBRequest) Reset()                    { *m = InitDBRequest{} }
func (m *InitDBRequest) String() string            { return proto.CompactTextString(m) }
func (*InitDBRequest) ProtoMessage()               {}
func (*InitDBRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type InitDBResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *InitDBResponse) Reset()                    { *m = InitDBResponse{} }
func (m *InitDBResponse) String() string            { return proto.CompactTextString(m) }
func (*InitDBResponse) ProtoMessage()               {}
func (*InitDBResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InitDBResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// >>>>>>>>>>>>>> Beacon Setting Begin >>>>>>>>>>>
type BeaconSetting struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
	Version     int32  `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	ApplyStatus int32  `protobuf:"varint,5,opt,name=apply_status,json=applyStatus" json:"apply_status,omitempty"`
	Setting     string `protobuf:"bytes,6,opt,name=setting" json:"setting,omitempty"`
	CreateAt    int64  `protobuf:"varint,7,opt,name=create_at,json=createAt" json:"create_at,omitempty"`
	ApplyAt     int64  `protobuf:"varint,8,opt,name=apply_at,json=applyAt" json:"apply_at,omitempty"`
}

func (m *BeaconSetting) Reset()                    { *m = BeaconSetting{} }
func (m *BeaconSetting) String() string            { return proto.CompactTextString(m) }
func (*BeaconSetting) ProtoMessage()               {}
func (*BeaconSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// UpdateBeaconApplyVersionRequest
type UpdateBeaconApplyVersionRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Version     int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *UpdateBeaconApplyVersionRequest) Reset()                    { *m = UpdateBeaconApplyVersionRequest{} }
func (m *UpdateBeaconApplyVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBeaconApplyVersionRequest) ProtoMessage()               {}
func (*UpdateBeaconApplyVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateBeaconApplyVersionResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateBeaconApplyVersionResponse) Reset()         { *m = UpdateBeaconApplyVersionResponse{} }
func (m *UpdateBeaconApplyVersionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBeaconApplyVersionResponse) ProtoMessage()    {}
func (*UpdateBeaconApplyVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

func (m *UpdateBeaconApplyVersionResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// AddBeaconSetting
type AddBeaconSettingRequest struct {
	DatabaseUrl   string         `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	BeaconSetting *BeaconSetting `protobuf:"bytes,2,opt,name=beaconSetting" json:"beaconSetting,omitempty"`
}

func (m *AddBeaconSettingRequest) Reset()                    { *m = AddBeaconSettingRequest{} }
func (m *AddBeaconSettingRequest) String() string            { return proto.CompactTextString(m) }
func (*AddBeaconSettingRequest) ProtoMessage()               {}
func (*AddBeaconSettingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AddBeaconSettingRequest) GetBeaconSetting() *BeaconSetting {
	if m != nil {
		return m.BeaconSetting
	}
	return nil
}

type AddBeaconSettingResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddBeaconSettingResponse) Reset()                    { *m = AddBeaconSettingResponse{} }
func (m *AddBeaconSettingResponse) String() string            { return proto.CompactTextString(m) }
func (*AddBeaconSettingResponse) ProtoMessage()               {}
func (*AddBeaconSettingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AddBeaconSettingResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// ReadBeaconSetByObject_idAndVersion
type ReadBeaconSetByObjectIdAndVersionRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Version     int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *ReadBeaconSetByObjectIdAndVersionRequest) Reset() {
	*m = ReadBeaconSetByObjectIdAndVersionRequest{}
}
func (m *ReadBeaconSetByObjectIdAndVersionRequest) String() string { return proto.CompactTextString(m) }
func (*ReadBeaconSetByObjectIdAndVersionRequest) ProtoMessage()    {}
func (*ReadBeaconSetByObjectIdAndVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8}
}

type ReadBeaconSetByObjectIdAndVersionResponse struct {
	BeaconSetting *BeaconSetting `protobuf:"bytes,1,opt,name=beaconSetting" json:"beaconSetting,omitempty"`
}

func (m *ReadBeaconSetByObjectIdAndVersionResponse) Reset() {
	*m = ReadBeaconSetByObjectIdAndVersionResponse{}
}
func (m *ReadBeaconSetByObjectIdAndVersionResponse) String() string { return proto.CompactTextString(m) }
func (*ReadBeaconSetByObjectIdAndVersionResponse) ProtoMessage()    {}
func (*ReadBeaconSetByObjectIdAndVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9}
}

func (m *ReadBeaconSetByObjectIdAndVersionResponse) GetBeaconSetting() *BeaconSetting {
	if m != nil {
		return m.BeaconSetting
	}
	return nil
}

// ReadBeaconSetting
type ReadBeaconSettingRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *ReadBeaconSettingRequest) Reset()                    { *m = ReadBeaconSettingRequest{} }
func (m *ReadBeaconSettingRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadBeaconSettingRequest) ProtoMessage()               {}
func (*ReadBeaconSettingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ReadBeaconSettingResponse struct {
	BeaconSettings []*BeaconSetting `protobuf:"bytes,1,rep,name=beaconSettings" json:"beaconSettings,omitempty"`
	Total          int64            `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *ReadBeaconSettingResponse) Reset()                    { *m = ReadBeaconSettingResponse{} }
func (m *ReadBeaconSettingResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadBeaconSettingResponse) ProtoMessage()               {}
func (*ReadBeaconSettingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReadBeaconSettingResponse) GetBeaconSettings() []*BeaconSetting {
	if m != nil {
		return m.BeaconSettings
	}
	return nil
}

// >>>>>>>>>>>>>> Gateway >>>>>>>>>>>>>>>>>>
type Gateway struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ObjectId string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Mac      string `protobuf:"bytes,4,opt,name=mac" json:"mac,omitempty"`
	Status   int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	LastTime int64  `protobuf:"varint,6,opt,name=last_time,json=lastTime" json:"last_time,omitempty"`
	Site     string `protobuf:"bytes,7,opt,name=site" json:"site,omitempty"`
	CreateAt int64  `protobuf:"varint,8,opt,name=create_at,json=createAt" json:"create_at,omitempty"`
	UpdateAt int64  `protobuf:"varint,9,opt,name=update_at,json=updateAt" json:"update_at,omitempty"`
}

func (m *Gateway) Reset()                    { *m = Gateway{} }
func (m *Gateway) String() string            { return proto.CompactTextString(m) }
func (*Gateway) ProtoMessage()               {}
func (*Gateway) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type AddGatewayRequest struct {
	DatabaseUrl string   `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Gateway     *Gateway `protobuf:"bytes,2,opt,name=gateway" json:"gateway,omitempty"`
}

func (m *AddGatewayRequest) Reset()                    { *m = AddGatewayRequest{} }
func (m *AddGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*AddGatewayRequest) ProtoMessage()               {}
func (*AddGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AddGatewayRequest) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type AddGatewayResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddGatewayResponse) Reset()                    { *m = AddGatewayResponse{} }
func (m *AddGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*AddGatewayResponse) ProtoMessage()               {}
func (*AddGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AddGatewayResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReadOneGatewayRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *ReadOneGatewayRequest) Reset()                    { *m = ReadOneGatewayRequest{} }
func (m *ReadOneGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOneGatewayRequest) ProtoMessage()               {}
func (*ReadOneGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type ReadOneGatewayResponse struct {
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway" json:"gateway,omitempty"`
}

func (m *ReadOneGatewayResponse) Reset()                    { *m = ReadOneGatewayResponse{} }
func (m *ReadOneGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOneGatewayResponse) ProtoMessage()               {}
func (*ReadOneGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReadOneGatewayResponse) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type ReadAllGatewayRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
}

func (m *ReadAllGatewayRequest) Reset()                    { *m = ReadAllGatewayRequest{} }
func (m *ReadAllGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAllGatewayRequest) ProtoMessage()               {}
func (*ReadAllGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type ReadAllGatewayResponse struct {
	Gateways []*Gateway `protobuf:"bytes,1,rep,name=gateways" json:"gateways,omitempty"`
	Total    int64      `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *ReadAllGatewayResponse) Reset()                    { *m = ReadAllGatewayResponse{} }
func (m *ReadAllGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAllGatewayResponse) ProtoMessage()               {}
func (*ReadAllGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReadAllGatewayResponse) GetGateways() []*Gateway {
	if m != nil {
		return m.Gateways
	}
	return nil
}

type ReadPagingGatewayRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Mac         string `protobuf:"bytes,2,opt,name=mac" json:"mac,omitempty"`
	Limit       int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset      int32  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Order       string `protobuf:"bytes,5,opt,name=order" json:"order,omitempty"`
}

func (m *ReadPagingGatewayRequest) Reset()                    { *m = ReadPagingGatewayRequest{} }
func (m *ReadPagingGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadPagingGatewayRequest) ProtoMessage()               {}
func (*ReadPagingGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type ReadPagingGatewayResponse struct {
	Gateways []*Gateway `protobuf:"bytes,1,rep,name=gateways" json:"gateways,omitempty"`
	Total    int64      `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *ReadPagingGatewayResponse) Reset()                    { *m = ReadPagingGatewayResponse{} }
func (m *ReadPagingGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadPagingGatewayResponse) ProtoMessage()               {}
func (*ReadPagingGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReadPagingGatewayResponse) GetGateways() []*Gateway {
	if m != nil {
		return m.Gateways
	}
	return nil
}

type DeleteGatewayRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *DeleteGatewayRequest) Reset()                    { *m = DeleteGatewayRequest{} }
func (m *DeleteGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteGatewayRequest) ProtoMessage()               {}
func (*DeleteGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type DeleteGatewayResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteGatewayResponse) Reset()                    { *m = DeleteGatewayResponse{} }
func (m *DeleteGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteGatewayResponse) ProtoMessage()               {}
func (*DeleteGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *DeleteGatewayResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateGatewayRequest struct {
	DatabaseUrl string   `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Gateway     *Gateway `protobuf:"bytes,2,opt,name=gateway" json:"gateway,omitempty"`
}

func (m *UpdateGatewayRequest) Reset()                    { *m = UpdateGatewayRequest{} }
func (m *UpdateGatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateGatewayRequest) ProtoMessage()               {}
func (*UpdateGatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *UpdateGatewayRequest) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type UpdateGatewayResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateGatewayResponse) Reset()                    { *m = UpdateGatewayResponse{} }
func (m *UpdateGatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateGatewayResponse) ProtoMessage()               {}
func (*UpdateGatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *UpdateGatewayResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateGatewayStatusRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	ObjectId    string `protobuf:"bytes,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *UpdateGatewayStatusRequest) Reset()                    { *m = UpdateGatewayStatusRequest{} }
func (m *UpdateGatewayStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateGatewayStatusRequest) ProtoMessage()               {}
func (*UpdateGatewayStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type UpdateGatewayStatusResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateGatewayStatusResponse) Reset()                    { *m = UpdateGatewayStatusResponse{} }
func (m *UpdateGatewayStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateGatewayStatusResponse) ProtoMessage()               {}
func (*UpdateGatewayStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *UpdateGatewayStatusResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// >>>>>>>>>>>>>> Beacon >>>>>>>>>>>>>>>>>>>
type Beacon struct {
	Id                 int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ObjectId           string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	UserId             string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Mac                string `protobuf:"bytes,4,opt,name=mac" json:"mac,omitempty"`
	Status             int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Password           string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	ChangePassword     string `protobuf:"bytes,7,opt,name=change_password,json=changePassword" json:"change_password,omitempty"`
	Type               int32  `protobuf:"varint,8,opt,name=type" json:"type,omitempty"`
	CurrentVersion     int32  `protobuf:"varint,9,opt,name=current_version,json=currentVersion" json:"current_version,omitempty"`
	LastSettingVersion int32  `protobuf:"varint,10,opt,name=last_setting_version,json=lastSettingVersion" json:"last_setting_version,omitempty"`
	ApplyStatus        int32  `protobuf:"varint,11,opt,name=apply_status,json=applyStatus" json:"apply_status,omitempty"`
	CreateAt           int64  `protobuf:"varint,12,opt,name=create_at,json=createAt" json:"create_at,omitempty"`
	UpdateAt           int64  `protobuf:"varint,13,opt,name=update_at,json=updateAt" json:"update_at,omitempty"`
}

func (m *Beacon) Reset()                    { *m = Beacon{} }
func (m *Beacon) String() string            { return proto.CompactTextString(m) }
func (*Beacon) ProtoMessage()               {}
func (*Beacon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

// UpdateBeacon
type UpdateBeaconRequest struct {
	DatabaseUrl string  `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Beacon      *Beacon `protobuf:"bytes,2,opt,name=beacon" json:"beacon,omitempty"`
}

func (m *UpdateBeaconRequest) Reset()                    { *m = UpdateBeaconRequest{} }
func (m *UpdateBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBeaconRequest) ProtoMessage()               {}
func (*UpdateBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateBeaconRequest) GetBeacon() *Beacon {
	if m != nil {
		return m.Beacon
	}
	return nil
}

type UpdateBeaconResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateBeaconResponse) Reset()                    { *m = UpdateBeaconResponse{} }
func (m *UpdateBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateBeaconResponse) ProtoMessage()               {}
func (*UpdateBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateBeaconResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// ReadPagingBeacon
type ReadPagingBeaconRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Limit       int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset      int32  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Order       string `protobuf:"bytes,4,opt,name=order" json:"order,omitempty"`
}

func (m *ReadPagingBeaconRequest) Reset()                    { *m = ReadPagingBeaconRequest{} }
func (m *ReadPagingBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadPagingBeaconRequest) ProtoMessage()               {}
func (*ReadPagingBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

type ReadPagingBeaconResponse struct {
	Beacons []*Beacon `protobuf:"bytes,1,rep,name=beacons" json:"beacons,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *ReadPagingBeaconResponse) Reset()                    { *m = ReadPagingBeaconResponse{} }
func (m *ReadPagingBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadPagingBeaconResponse) ProtoMessage()               {}
func (*ReadPagingBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ReadPagingBeaconResponse) GetBeacons() []*Beacon {
	if m != nil {
		return m.Beacons
	}
	return nil
}

// AddBeacon
type AddBeaconRequest struct {
	DatabaseUrl string  `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	Beacon      *Beacon `protobuf:"bytes,2,opt,name=beacon" json:"beacon,omitempty"`
}

func (m *AddBeaconRequest) Reset()                    { *m = AddBeaconRequest{} }
func (m *AddBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*AddBeaconRequest) ProtoMessage()               {}
func (*AddBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *AddBeaconRequest) GetBeacon() *Beacon {
	if m != nil {
		return m.Beacon
	}
	return nil
}

type AddBeaconResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddBeaconResponse) Reset()                    { *m = AddBeaconResponse{} }
func (m *AddBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*AddBeaconResponse) ProtoMessage()               {}
func (*AddBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AddBeaconResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// DeleteBeacon
type DeleteBeaconRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *DeleteBeaconRequest) Reset()                    { *m = DeleteBeaconRequest{} }
func (m *DeleteBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBeaconRequest) ProtoMessage()               {}
func (*DeleteBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

type DeleteBeaconResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteBeaconResponse) Reset()                    { *m = DeleteBeaconResponse{} }
func (m *DeleteBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteBeaconResponse) ProtoMessage()               {}
func (*DeleteBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *DeleteBeaconResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// ReadOneBeacon
type ReadOneBeaconRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *ReadOneBeaconRequest) Reset()                    { *m = ReadOneBeaconRequest{} }
func (m *ReadOneBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOneBeaconRequest) ProtoMessage()               {}
func (*ReadOneBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

type ReadOneBeaconResponse struct {
	Beacon *Beacon `protobuf:"bytes,1,opt,name=beacon" json:"beacon,omitempty"`
}

func (m *ReadOneBeaconResponse) Reset()                    { *m = ReadOneBeaconResponse{} }
func (m *ReadOneBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOneBeaconResponse) ProtoMessage()               {}
func (*ReadOneBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ReadOneBeaconResponse) GetBeacon() *Beacon {
	if m != nil {
		return m.Beacon
	}
	return nil
}

// ReadAllBeacon
type ReadAllBeaconRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
}

func (m *ReadAllBeaconRequest) Reset()                    { *m = ReadAllBeaconRequest{} }
func (m *ReadAllBeaconRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAllBeaconRequest) ProtoMessage()               {}
func (*ReadAllBeaconRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

type ReadAllBeaconResponse struct {
	Beacons []*Beacon `protobuf:"bytes,1,rep,name=beacons" json:"beacons,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *ReadAllBeaconResponse) Reset()                    { *m = ReadAllBeaconResponse{} }
func (m *ReadAllBeaconResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAllBeaconResponse) ProtoMessage()               {}
func (*ReadAllBeaconResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ReadAllBeaconResponse) GetBeacons() []*Beacon {
	if m != nil {
		return m.Beacons
	}
	return nil
}

type UpdateBeaconApplyStatusRequest struct {
	DatabaseUrl string `protobuf:"bytes,1,opt,name=database_url,json=databaseUrl" json:"database_url,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Mac         string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *UpdateBeaconApplyStatusRequest) Reset()                    { *m = UpdateBeaconApplyStatusRequest{} }
func (m *UpdateBeaconApplyStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBeaconApplyStatusRequest) ProtoMessage()               {}
func (*UpdateBeaconApplyStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

type UpdateBeaconApplyStatusResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateBeaconApplyStatusResponse) Reset()         { *m = UpdateBeaconApplyStatusResponse{} }
func (m *UpdateBeaconApplyStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBeaconApplyStatusResponse) ProtoMessage()    {}
func (*UpdateBeaconApplyStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41}
}

func (m *UpdateBeaconApplyStatusResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "Result")
	proto.RegisterType((*InitDBRequest)(nil), "InitDBRequest")
	proto.RegisterType((*InitDBResponse)(nil), "InitDBResponse")
	proto.RegisterType((*BeaconSetting)(nil), "BeaconSetting")
	proto.RegisterType((*UpdateBeaconApplyVersionRequest)(nil), "UpdateBeaconApplyVersionRequest")
	proto.RegisterType((*UpdateBeaconApplyVersionResponse)(nil), "UpdateBeaconApplyVersionResponse")
	proto.RegisterType((*AddBeaconSettingRequest)(nil), "AddBeaconSettingRequest")
	proto.RegisterType((*AddBeaconSettingResponse)(nil), "AddBeaconSettingResponse")
	proto.RegisterType((*ReadBeaconSetByObjectIdAndVersionRequest)(nil), "ReadBeaconSetByObjectIdAndVersionRequest")
	proto.RegisterType((*ReadBeaconSetByObjectIdAndVersionResponse)(nil), "ReadBeaconSetByObjectIdAndVersionResponse")
	proto.RegisterType((*ReadBeaconSettingRequest)(nil), "ReadBeaconSettingRequest")
	proto.RegisterType((*ReadBeaconSettingResponse)(nil), "ReadBeaconSettingResponse")
	proto.RegisterType((*Gateway)(nil), "Gateway")
	proto.RegisterType((*AddGatewayRequest)(nil), "AddGatewayRequest")
	proto.RegisterType((*AddGatewayResponse)(nil), "AddGatewayResponse")
	proto.RegisterType((*ReadOneGatewayRequest)(nil), "ReadOneGatewayRequest")
	proto.RegisterType((*ReadOneGatewayResponse)(nil), "ReadOneGatewayResponse")
	proto.RegisterType((*ReadAllGatewayRequest)(nil), "ReadAllGatewayRequest")
	proto.RegisterType((*ReadAllGatewayResponse)(nil), "ReadAllGatewayResponse")
	proto.RegisterType((*ReadPagingGatewayRequest)(nil), "ReadPagingGatewayRequest")
	proto.RegisterType((*ReadPagingGatewayResponse)(nil), "ReadPagingGatewayResponse")
	proto.RegisterType((*DeleteGatewayRequest)(nil), "DeleteGatewayRequest")
	proto.RegisterType((*DeleteGatewayResponse)(nil), "DeleteGatewayResponse")
	proto.RegisterType((*UpdateGatewayRequest)(nil), "UpdateGatewayRequest")
	proto.RegisterType((*UpdateGatewayResponse)(nil), "UpdateGatewayResponse")
	proto.RegisterType((*UpdateGatewayStatusRequest)(nil), "UpdateGatewayStatusRequest")
	proto.RegisterType((*UpdateGatewayStatusResponse)(nil), "UpdateGatewayStatusResponse")
	proto.RegisterType((*Beacon)(nil), "Beacon")
	proto.RegisterType((*UpdateBeaconRequest)(nil), "UpdateBeaconRequest")
	proto.RegisterType((*UpdateBeaconResponse)(nil), "UpdateBeaconResponse")
	proto.RegisterType((*ReadPagingBeaconRequest)(nil), "ReadPagingBeaconRequest")
	proto.RegisterType((*ReadPagingBeaconResponse)(nil), "ReadPagingBeaconResponse")
	proto.RegisterType((*AddBeaconRequest)(nil), "AddBeaconRequest")
	proto.RegisterType((*AddBeaconResponse)(nil), "AddBeaconResponse")
	proto.RegisterType((*DeleteBeaconRequest)(nil), "DeleteBeaconRequest")
	proto.RegisterType((*DeleteBeaconResponse)(nil), "DeleteBeaconResponse")
	proto.RegisterType((*ReadOneBeaconRequest)(nil), "ReadOneBeaconRequest")
	proto.RegisterType((*ReadOneBeaconResponse)(nil), "ReadOneBeaconResponse")
	proto.RegisterType((*ReadAllBeaconRequest)(nil), "ReadAllBeaconRequest")
	proto.RegisterType((*ReadAllBeaconResponse)(nil), "ReadAllBeaconResponse")
	proto.RegisterType((*UpdateBeaconApplyStatusRequest)(nil), "UpdateBeaconApplyStatusRequest")
	proto.RegisterType((*UpdateBeaconApplyStatusResponse)(nil), "UpdateBeaconApplyStatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Device service

type DeviceClient interface {
	// beacon
	AddBeacon(ctx context.Context, in *AddBeaconRequest, opts ...client.CallOption) (*AddBeaconResponse, error)
	DeleteBeacon(ctx context.Context, in *DeleteBeaconRequest, opts ...client.CallOption) (*DeleteBeaconResponse, error)
	ReadOneBeacon(ctx context.Context, in *ReadOneBeaconRequest, opts ...client.CallOption) (*ReadOneBeaconResponse, error)
	ReadAllBeacon(ctx context.Context, in *ReadAllBeaconRequest, opts ...client.CallOption) (*ReadAllBeaconResponse, error)
	ReadPagingBeacon(ctx context.Context, in *ReadPagingBeaconRequest, opts ...client.CallOption) (*ReadPagingBeaconResponse, error)
	UpdateBeacon(ctx context.Context, in *UpdateBeaconRequest, opts ...client.CallOption) (*UpdateBeaconResponse, error)
	UpdateBeaconApplyStatus(ctx context.Context, in *UpdateBeaconApplyStatusRequest, opts ...client.CallOption) (*UpdateBeaconApplyStatusResponse, error)
	// gateway
	AddGateway(ctx context.Context, in *AddGatewayRequest, opts ...client.CallOption) (*AddGatewayResponse, error)
	ReadOneGateway(ctx context.Context, in *ReadOneGatewayRequest, opts ...client.CallOption) (*ReadOneGatewayResponse, error)
	ReadAllGateway(ctx context.Context, in *ReadAllGatewayRequest, opts ...client.CallOption) (*ReadAllGatewayResponse, error)
	ReadPagingGateway(ctx context.Context, in *ReadPagingGatewayRequest, opts ...client.CallOption) (*ReadPagingGatewayResponse, error)
	DeleteGateway(ctx context.Context, in *DeleteGatewayRequest, opts ...client.CallOption) (*DeleteGatewayResponse, error)
	UpdateGateway(ctx context.Context, in *UpdateGatewayRequest, opts ...client.CallOption) (*UpdateGatewayResponse, error)
	UpdateGatewayStatus(ctx context.Context, in *UpdateGatewayStatusRequest, opts ...client.CallOption) (*UpdateGatewayStatusResponse, error)
	// beacon setting
	AddBeaconSetting(ctx context.Context, in *AddBeaconSettingRequest, opts ...client.CallOption) (*AddBeaconSettingResponse, error)
	ReadBeaconSetting(ctx context.Context, in *ReadBeaconSettingRequest, opts ...client.CallOption) (*ReadBeaconSettingResponse, error)
	ReadBeaconSetByObjectIdAndVersion(ctx context.Context, in *ReadBeaconSetByObjectIdAndVersionRequest, opts ...client.CallOption) (*ReadBeaconSetByObjectIdAndVersionResponse, error)
	UpdateBeaconApplyVersion(ctx context.Context, in *UpdateBeaconApplyVersionRequest, opts ...client.CallOption) (*UpdateBeaconApplyVersionResponse, error)
	InitDB(ctx context.Context, in *InitDBRequest, opts ...client.CallOption) (*InitDBResponse, error)
}

type deviceClient struct {
	c           client.Client
	serviceName string
}

func NewDeviceClient(serviceName string, c client.Client) DeviceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "device"
	}
	return &deviceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *deviceClient) AddBeacon(ctx context.Context, in *AddBeaconRequest, opts ...client.CallOption) (*AddBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.AddBeacon", in)
	out := new(AddBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteBeacon(ctx context.Context, in *DeleteBeaconRequest, opts ...client.CallOption) (*DeleteBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.DeleteBeacon", in)
	out := new(DeleteBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadOneBeacon(ctx context.Context, in *ReadOneBeaconRequest, opts ...client.CallOption) (*ReadOneBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadOneBeacon", in)
	out := new(ReadOneBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadAllBeacon(ctx context.Context, in *ReadAllBeaconRequest, opts ...client.CallOption) (*ReadAllBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadAllBeacon", in)
	out := new(ReadAllBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadPagingBeacon(ctx context.Context, in *ReadPagingBeaconRequest, opts ...client.CallOption) (*ReadPagingBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadPagingBeacon", in)
	out := new(ReadPagingBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateBeacon(ctx context.Context, in *UpdateBeaconRequest, opts ...client.CallOption) (*UpdateBeaconResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.UpdateBeacon", in)
	out := new(UpdateBeaconResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateBeaconApplyStatus(ctx context.Context, in *UpdateBeaconApplyStatusRequest, opts ...client.CallOption) (*UpdateBeaconApplyStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.UpdateBeaconApplyStatus", in)
	out := new(UpdateBeaconApplyStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) AddGateway(ctx context.Context, in *AddGatewayRequest, opts ...client.CallOption) (*AddGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.AddGateway", in)
	out := new(AddGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadOneGateway(ctx context.Context, in *ReadOneGatewayRequest, opts ...client.CallOption) (*ReadOneGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadOneGateway", in)
	out := new(ReadOneGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadAllGateway(ctx context.Context, in *ReadAllGatewayRequest, opts ...client.CallOption) (*ReadAllGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadAllGateway", in)
	out := new(ReadAllGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadPagingGateway(ctx context.Context, in *ReadPagingGatewayRequest, opts ...client.CallOption) (*ReadPagingGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadPagingGateway", in)
	out := new(ReadPagingGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteGateway(ctx context.Context, in *DeleteGatewayRequest, opts ...client.CallOption) (*DeleteGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.DeleteGateway", in)
	out := new(DeleteGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateGateway(ctx context.Context, in *UpdateGatewayRequest, opts ...client.CallOption) (*UpdateGatewayResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.UpdateGateway", in)
	out := new(UpdateGatewayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateGatewayStatus(ctx context.Context, in *UpdateGatewayStatusRequest, opts ...client.CallOption) (*UpdateGatewayStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.UpdateGatewayStatus", in)
	out := new(UpdateGatewayStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) AddBeaconSetting(ctx context.Context, in *AddBeaconSettingRequest, opts ...client.CallOption) (*AddBeaconSettingResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.AddBeaconSetting", in)
	out := new(AddBeaconSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadBeaconSetting(ctx context.Context, in *ReadBeaconSettingRequest, opts ...client.CallOption) (*ReadBeaconSettingResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadBeaconSetting", in)
	out := new(ReadBeaconSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadBeaconSetByObjectIdAndVersion(ctx context.Context, in *ReadBeaconSetByObjectIdAndVersionRequest, opts ...client.CallOption) (*ReadBeaconSetByObjectIdAndVersionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.ReadBeaconSetByObjectIdAndVersion", in)
	out := new(ReadBeaconSetByObjectIdAndVersionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateBeaconApplyVersion(ctx context.Context, in *UpdateBeaconApplyVersionRequest, opts ...client.CallOption) (*UpdateBeaconApplyVersionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.UpdateBeaconApplyVersion", in)
	out := new(UpdateBeaconApplyVersionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) InitDB(ctx context.Context, in *InitDBRequest, opts ...client.CallOption) (*InitDBResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.InitDB", in)
	out := new(InitDBResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Device service

type DeviceHandler interface {
	// beacon
	AddBeacon(context.Context, *AddBeaconRequest, *AddBeaconResponse) error
	DeleteBeacon(context.Context, *DeleteBeaconRequest, *DeleteBeaconResponse) error
	ReadOneBeacon(context.Context, *ReadOneBeaconRequest, *ReadOneBeaconResponse) error
	ReadAllBeacon(context.Context, *ReadAllBeaconRequest, *ReadAllBeaconResponse) error
	ReadPagingBeacon(context.Context, *ReadPagingBeaconRequest, *ReadPagingBeaconResponse) error
	UpdateBeacon(context.Context, *UpdateBeaconRequest, *UpdateBeaconResponse) error
	UpdateBeaconApplyStatus(context.Context, *UpdateBeaconApplyStatusRequest, *UpdateBeaconApplyStatusResponse) error
	// gateway
	AddGateway(context.Context, *AddGatewayRequest, *AddGatewayResponse) error
	ReadOneGateway(context.Context, *ReadOneGatewayRequest, *ReadOneGatewayResponse) error
	ReadAllGateway(context.Context, *ReadAllGatewayRequest, *ReadAllGatewayResponse) error
	ReadPagingGateway(context.Context, *ReadPagingGatewayRequest, *ReadPagingGatewayResponse) error
	DeleteGateway(context.Context, *DeleteGatewayRequest, *DeleteGatewayResponse) error
	UpdateGateway(context.Context, *UpdateGatewayRequest, *UpdateGatewayResponse) error
	UpdateGatewayStatus(context.Context, *UpdateGatewayStatusRequest, *UpdateGatewayStatusResponse) error
	// beacon setting
	AddBeaconSetting(context.Context, *AddBeaconSettingRequest, *AddBeaconSettingResponse) error
	ReadBeaconSetting(context.Context, *ReadBeaconSettingRequest, *ReadBeaconSettingResponse) error
	ReadBeaconSetByObjectIdAndVersion(context.Context, *ReadBeaconSetByObjectIdAndVersionRequest, *ReadBeaconSetByObjectIdAndVersionResponse) error
	UpdateBeaconApplyVersion(context.Context, *UpdateBeaconApplyVersionRequest, *UpdateBeaconApplyVersionResponse) error
	InitDB(context.Context, *InitDBRequest, *InitDBResponse) error
}

func RegisterDeviceHandler(s server.Server, hdlr DeviceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Device{hdlr}, opts...))
}

type Device struct {
	DeviceHandler
}

func (h *Device) AddBeacon(ctx context.Context, in *AddBeaconRequest, out *AddBeaconResponse) error {
	return h.DeviceHandler.AddBeacon(ctx, in, out)
}

func (h *Device) DeleteBeacon(ctx context.Context, in *DeleteBeaconRequest, out *DeleteBeaconResponse) error {
	return h.DeviceHandler.DeleteBeacon(ctx, in, out)
}

func (h *Device) ReadOneBeacon(ctx context.Context, in *ReadOneBeaconRequest, out *ReadOneBeaconResponse) error {
	return h.DeviceHandler.ReadOneBeacon(ctx, in, out)
}

func (h *Device) ReadAllBeacon(ctx context.Context, in *ReadAllBeaconRequest, out *ReadAllBeaconResponse) error {
	return h.DeviceHandler.ReadAllBeacon(ctx, in, out)
}

func (h *Device) ReadPagingBeacon(ctx context.Context, in *ReadPagingBeaconRequest, out *ReadPagingBeaconResponse) error {
	return h.DeviceHandler.ReadPagingBeacon(ctx, in, out)
}

func (h *Device) UpdateBeacon(ctx context.Context, in *UpdateBeaconRequest, out *UpdateBeaconResponse) error {
	return h.DeviceHandler.UpdateBeacon(ctx, in, out)
}

func (h *Device) UpdateBeaconApplyStatus(ctx context.Context, in *UpdateBeaconApplyStatusRequest, out *UpdateBeaconApplyStatusResponse) error {
	return h.DeviceHandler.UpdateBeaconApplyStatus(ctx, in, out)
}

func (h *Device) AddGateway(ctx context.Context, in *AddGatewayRequest, out *AddGatewayResponse) error {
	return h.DeviceHandler.AddGateway(ctx, in, out)
}

func (h *Device) ReadOneGateway(ctx context.Context, in *ReadOneGatewayRequest, out *ReadOneGatewayResponse) error {
	return h.DeviceHandler.ReadOneGateway(ctx, in, out)
}

func (h *Device) ReadAllGateway(ctx context.Context, in *ReadAllGatewayRequest, out *ReadAllGatewayResponse) error {
	return h.DeviceHandler.ReadAllGateway(ctx, in, out)
}

func (h *Device) ReadPagingGateway(ctx context.Context, in *ReadPagingGatewayRequest, out *ReadPagingGatewayResponse) error {
	return h.DeviceHandler.ReadPagingGateway(ctx, in, out)
}

func (h *Device) DeleteGateway(ctx context.Context, in *DeleteGatewayRequest, out *DeleteGatewayResponse) error {
	return h.DeviceHandler.DeleteGateway(ctx, in, out)
}

func (h *Device) UpdateGateway(ctx context.Context, in *UpdateGatewayRequest, out *UpdateGatewayResponse) error {
	return h.DeviceHandler.UpdateGateway(ctx, in, out)
}

func (h *Device) UpdateGatewayStatus(ctx context.Context, in *UpdateGatewayStatusRequest, out *UpdateGatewayStatusResponse) error {
	return h.DeviceHandler.UpdateGatewayStatus(ctx, in, out)
}

func (h *Device) AddBeaconSetting(ctx context.Context, in *AddBeaconSettingRequest, out *AddBeaconSettingResponse) error {
	return h.DeviceHandler.AddBeaconSetting(ctx, in, out)
}

func (h *Device) ReadBeaconSetting(ctx context.Context, in *ReadBeaconSettingRequest, out *ReadBeaconSettingResponse) error {
	return h.DeviceHandler.ReadBeaconSetting(ctx, in, out)
}

func (h *Device) ReadBeaconSetByObjectIdAndVersion(ctx context.Context, in *ReadBeaconSetByObjectIdAndVersionRequest, out *ReadBeaconSetByObjectIdAndVersionResponse) error {
	return h.DeviceHandler.ReadBeaconSetByObjectIdAndVersion(ctx, in, out)
}

func (h *Device) UpdateBeaconApplyVersion(ctx context.Context, in *UpdateBeaconApplyVersionRequest, out *UpdateBeaconApplyVersionResponse) error {
	return h.DeviceHandler.UpdateBeaconApplyVersion(ctx, in, out)
}

func (h *Device) InitDB(ctx context.Context, in *InitDBRequest, out *InitDBResponse) error {
	return h.DeviceHandler.InitDB(ctx, in, out)
}

func init() {
	proto.RegisterFile("beaconCloud/rpcServer/device-srv/proto/device/device.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0x5b, 0x6f, 0xe3, 0xc4,
	0x17, 0xb7, 0x73, 0xcf, 0xe9, 0x36, 0xbb, 0x3b, 0x9b, 0xb4, 0xae, 0xfb, 0xd7, 0xbf, 0xe9, 0x08,
	0x89, 0x2e, 0x88, 0x59, 0x28, 0x0b, 0x5b, 0x96, 0x8b, 0x48, 0x5b, 0x09, 0x55, 0x42, 0xda, 0xca,
	0xdd, 0x2d, 0x02, 0x01, 0x91, 0x1b, 0xcf, 0xa6, 0x46, 0x6e, 0x1c, 0xec, 0x49, 0x57, 0x15, 0x3c,
	0xf0, 0xc0, 0x0b, 0xcf, 0x7c, 0x3e, 0xc4, 0x07, 0xe1, 0x05, 0x79, 0x66, 0x7c, 0x8d, 0xdd, 0xda,
	0x52, 0xcb, 0x53, 0x32, 0x67, 0x66, 0xce, 0xfc, 0xce, 0x65, 0x7e, 0xe7, 0x78, 0xe0, 0xf9, 0x19,
	0x35, 0x27, 0xee, 0xec, 0xc0, 0x71, 0x17, 0xd6, 0x13, 0x6f, 0x3e, 0x39, 0xa1, 0xde, 0x25, 0xf5,
	0x9e, 0x58, 0xf4, 0xd2, 0x9e, 0xd0, 0xf7, 0x7c, 0xef, 0xf2, 0xc9, 0xdc, 0x73, 0x99, 0x2b, 0x05,
	0xf2, 0x87, 0x70, 0x19, 0xfe, 0x1e, 0x5a, 0x06, 0xf5, 0x17, 0x0e, 0x43, 0x3d, 0xa8, 0xd9, 0x96,
	0xa6, 0x0e, 0xd5, 0x9d, 0xae, 0x51, 0xb3, 0x2d, 0x84, 0xa0, 0x31, 0x71, 0x2d, 0xaa, 0xd5, 0x86,
	0xea, 0x4e, 0xd3, 0xe0, 0xff, 0xd1, 0x1a, 0xb4, 0x2c, 0xca, 0x4c, 0xdb, 0xd1, 0xea, 0x7c, 0x9d,
	0x1c, 0x05, 0x72, 0x9f, 0x99, 0x6c, 0xe1, 0x6b, 0x0d, 0x21, 0x17, 0x23, 0xbc, 0x0b, 0xab, 0x47,
	0x33, 0x9b, 0x1d, 0xee, 0x1b, 0xf4, 0xe7, 0x05, 0xf5, 0x19, 0xda, 0x86, 0x7b, 0x96, 0xc9, 0xcc,
	0x33, 0xd3, 0xa7, 0xe3, 0x85, 0xe7, 0xc8, 0xe3, 0x56, 0x42, 0xd9, 0x2b, 0xcf, 0xc1, 0x1f, 0x40,
	0x2f, 0xdc, 0xe3, 0xcf, 0xdd, 0x99, 0x4f, 0xd1, 0x16, 0xb4, 0x3c, 0x8e, 0x91, 0x2f, 0x5f, 0xd9,
	0x6d, 0x13, 0x01, 0xd9, 0x90, 0x62, 0xfc, 0x97, 0x0a, 0xab, 0xfb, 0xdc, 0x07, 0x27, 0x94, 0x31,
	0x7b, 0x36, 0x4d, 0x18, 0xd3, 0xe4, 0xc6, 0x6c, 0x42, 0xd7, 0x3d, 0xfb, 0x89, 0x4e, 0xd8, 0xd8,
	0xb6, 0xb8, 0x45, 0x5d, 0xa3, 0x23, 0x04, 0x47, 0x16, 0x7a, 0x00, 0xf5, 0x0b, 0x73, 0x22, 0x4d,
	0x0a, 0xfe, 0x22, 0x0d, 0xda, 0x97, 0xd4, 0xf3, 0x6d, 0x77, 0xc6, 0x0d, 0x6a, 0x1a, 0xe1, 0x30,
	0x30, 0xc0, 0x9c, 0xcf, 0x9d, 0xab, 0xb1, 0xb4, 0xb7, 0xc9, 0xa7, 0x57, 0xb8, 0xec, 0x84, 0x8b,
	0x82, 0xcd, 0xbe, 0x80, 0xa1, 0xb5, 0xb8, 0xca, 0x70, 0x18, 0xa0, 0x98, 0x78, 0xd4, 0x64, 0x74,
	0x6c, 0x32, 0xad, 0x3d, 0x54, 0x77, 0xea, 0x46, 0x47, 0x08, 0x46, 0x0c, 0x6d, 0x40, 0x47, 0x68,
	0x36, 0x99, 0xd6, 0xe1, 0x73, 0x6d, 0x3e, 0x1e, 0x31, 0xfc, 0x0b, 0x6c, 0xbd, 0x9a, 0x5b, 0x26,
	0xa3, 0xc2, 0xc8, 0x51, 0x20, 0x3e, 0x15, 0x80, 0xca, 0x3b, 0xf6, 0x7a, 0x1f, 0x24, 0x2c, 0xae,
	0xa7, 0x2c, 0xc6, 0x07, 0x30, 0x2c, 0x3e, 0xbc, 0x6c, 0x84, 0x3c, 0x58, 0x1f, 0x59, 0x56, 0x2a,
	0x46, 0x15, 0x90, 0x3f, 0x85, 0xd5, 0xb3, 0xe4, 0x56, 0x8e, 0x7e, 0x65, 0xb7, 0x47, 0xd2, 0x0a,
	0xd3, 0x8b, 0xf0, 0xa7, 0xa0, 0x2d, 0x9f, 0x59, 0x16, 0xf0, 0xef, 0x2a, 0xec, 0x18, 0xd4, 0x8c,
	0xb7, 0xef, 0x5f, 0xbd, 0x90, 0xbe, 0x1a, 0xcd, 0xac, 0xff, 0xcc, 0xf9, 0x26, 0x3c, 0x2e, 0x81,
	0x42, 0x1a, 0xb5, 0xe4, 0x26, 0xb5, 0x8c, 0x9b, 0x1c, 0xd0, 0x52, 0x47, 0x54, 0x8c, 0x4d, 0xb5,
	0x9b, 0x85, 0x6d, 0xd8, 0xc8, 0x39, 0x4d, 0x1a, 0xf0, 0x31, 0xf4, 0x52, 0xd8, 0x7c, 0x4d, 0x1d,
	0xd6, 0x73, 0x2c, 0xc8, 0xac, 0x42, 0x7d, 0x68, 0x32, 0x97, 0x99, 0x0e, 0x3f, 0xbf, 0x6e, 0x88,
	0x01, 0xfe, 0x5b, 0x85, 0xf6, 0x57, 0x26, 0xa3, 0x6f, 0xcc, 0xab, 0x6a, 0x7c, 0x80, 0xa0, 0x31,
	0x33, 0x2f, 0xa8, 0x84, 0xcd, 0xff, 0x87, 0x96, 0x34, 0x62, 0x8e, 0x88, 0x39, 0x4f, 0x70, 0x80,
	0x1c, 0x05, 0xaa, 0x1d, 0xd3, 0x67, 0x63, 0x66, 0x5f, 0x50, 0x4e, 0x00, 0x75, 0xa3, 0x13, 0x08,
	0x5e, 0xda, 0x17, 0x34, 0x50, 0xed, 0xdb, 0x8c, 0xf2, 0xcb, 0xdf, 0x35, 0xf8, 0xff, 0x34, 0x2b,
	0x74, 0x32, 0xac, 0xb0, 0x09, 0xdd, 0x05, 0xbf, 0x7d, 0xc1, 0x64, 0x57, 0x4c, 0x0a, 0xc1, 0x88,
	0xe1, 0xef, 0xe0, 0xe1, 0xc8, 0xb2, 0xa4, 0x8d, 0x15, 0x62, 0x86, 0xa1, 0x3d, 0x15, 0x9b, 0xe4,
	0x4d, 0xea, 0x90, 0x50, 0x49, 0x38, 0x81, 0x3f, 0x02, 0x94, 0xd4, 0x5d, 0xf6, 0xde, 0xd8, 0x30,
	0x08, 0xe2, 0xfb, 0x62, 0x46, 0xab, 0xc3, 0xaa, 0x98, 0x4a, 0x9f, 0xc1, 0x5a, 0xf6, 0x28, 0x89,
	0x32, 0x61, 0x9f, 0x5a, 0x64, 0xdf, 0x73, 0x01, 0x74, 0xe4, 0x38, 0x95, 0x81, 0xe2, 0x97, 0xe2,
	0xe4, 0xe4, 0x5e, 0x79, 0xf2, 0x5b, 0xd0, 0x91, 0x07, 0x84, 0xb9, 0x1b, 0x1f, 0x1d, 0xcd, 0x14,
	0xe4, 0xeb, 0x9f, 0xaa, 0xb8, 0x89, 0xc7, 0xe6, 0xd4, 0x9e, 0x4d, 0xab, 0xbb, 0x4f, 0x7a, 0xa8,
	0x16, 0xa7, 0x68, 0x1f, 0x9a, 0x8e, 0x7d, 0x61, 0x33, 0xc9, 0x2a, 0x62, 0x10, 0x24, 0xae, 0xfb,
	0xfa, 0xb5, 0x4f, 0x99, 0xac, 0x6d, 0x72, 0x14, 0xac, 0x76, 0x3d, 0x8b, 0x7a, 0x3c, 0x9f, 0xbb,
	0x86, 0x18, 0xe0, 0x6f, 0xc4, 0x85, 0xcd, 0x80, 0xba, 0x05, 0x73, 0xcf, 0xa1, 0x7f, 0x48, 0x1d,
	0xca, 0xee, 0x3e, 0x51, 0xf6, 0x60, 0x90, 0x39, 0xa9, 0x6c, 0x36, 0xff, 0x00, 0x7d, 0x51, 0xfb,
	0xee, 0xe6, 0x8e, 0xed, 0xc1, 0x20, 0xa3, 0xbe, 0x2c, 0x30, 0x06, 0x7a, 0x6a, 0xa7, 0x68, 0x3d,
	0x2a, 0xc0, 0x8b, 0xd9, 0xab, 0x96, 0x65, 0xaf, 0xd8, 0xb5, 0xf5, 0xb4, 0x6b, 0xf1, 0x17, 0xb0,
	0x99, 0x7b, 0x6a, 0x59, 0xd4, 0x7f, 0xd4, 0xa1, 0x25, 0x98, 0xbc, 0x1a, 0x21, 0xaf, 0x43, 0x7b,
	0xe1, 0x53, 0x2f, 0x86, 0xd4, 0x0a, 0x86, 0x71, 0xac, 0x4b, 0xb0, 0xb2, 0x0e, 0x9d, 0xb9, 0xe9,
	0xfb, 0x6f, 0x5c, 0xcf, 0x92, 0x5d, 0x59, 0x34, 0x46, 0x6f, 0xc3, 0xfd, 0xc9, 0xb9, 0x39, 0x9b,
	0xd2, 0x71, 0xb4, 0x44, 0xf0, 0x73, 0x4f, 0x88, 0x8f, 0xc3, 0x85, 0x08, 0x1a, 0xec, 0x6a, 0x4e,
	0x39, 0x49, 0x37, 0x0d, 0xfe, 0x9f, 0x6f, 0x5e, 0x78, 0x1e, 0x9d, 0xb1, 0x71, 0x58, 0xc3, 0xbb,
	0x7c, 0xba, 0x27, 0xc5, 0xb2, 0x4a, 0xa3, 0xf7, 0xa1, 0xcf, 0xeb, 0x82, 0x6c, 0x06, 0xa3, 0xd5,
	0xc0, 0x57, 0xa3, 0x60, 0x4e, 0x16, 0xb4, 0xd3, 0x82, 0x5e, 0x73, 0x65, 0xb9, 0xd7, 0x4c, 0xd5,
	0x8e, 0x7b, 0xd7, 0xd5, 0x8e, 0xd5, 0x4c, 0xed, 0xf8, 0x16, 0x1e, 0x25, 0xdb, 0xba, 0x0a, 0xa9,
	0xb3, 0x05, 0x2d, 0x51, 0x7f, 0x65, 0x62, 0xb7, 0x65, 0x75, 0x36, 0xa4, 0x18, 0x3f, 0x0b, 0x6f,
	0x4d, 0xa8, 0xba, 0x6c, 0x7e, 0xfc, 0xa6, 0xc2, 0x7a, 0x4c, 0x36, 0x95, 0x81, 0x45, 0x74, 0x57,
	0xcb, 0xa7, 0xbb, 0x7a, 0x3e, 0xdd, 0x35, 0x92, 0x74, 0x77, 0x92, 0xe4, 0xe0, 0x0c, 0xfe, 0x6d,
	0x68, 0x0b, 0x0b, 0x43, 0xb2, 0x8b, 0x2c, 0x0f, 0xe5, 0x05, 0x54, 0x77, 0x0a, 0x0f, 0xa2, 0x4e,
	0xf4, 0x36, 0x1d, 0xfd, 0x94, 0xd7, 0xff, 0xaa, 0x5e, 0x9e, 0xc2, 0x23, 0x41, 0x87, 0x95, 0x01,
	0x55, 0xe4, 0xdd, 0x67, 0x21, 0xc3, 0x57, 0x45, 0x78, 0x0e, 0x7d, 0x59, 0xd9, 0xef, 0x1a, 0xe2,
	0x5e, 0xd4, 0xae, 0x2c, 0x63, 0x94, 0xbe, 0x57, 0xf3, 0x7d, 0xff, 0x89, 0xc0, 0x38, 0x72, 0x9c,
	0xaa, 0x18, 0xf1, 0x71, 0xd4, 0x7a, 0xdc, 0x56, 0x82, 0x79, 0xf0, 0xff, 0xa5, 0x6f, 0xb4, 0xca,
	0x25, 0xa1, 0xa2, 0xeb, 0xf6, 0x73, 0x3e, 0x4a, 0x2b, 0x16, 0x84, 0xdd, 0x7f, 0x00, 0x5a, 0x87,
	0xfc, 0x39, 0x02, 0x3d, 0x85, 0x6e, 0x94, 0xcb, 0xe8, 0x21, 0xc9, 0xde, 0x17, 0x1d, 0x91, 0xa5,
	0x54, 0xc7, 0x0a, 0xfa, 0x1c, 0xee, 0x25, 0x53, 0x0c, 0xf5, 0x49, 0x4e, 0x6a, 0xeb, 0x03, 0x92,
	0x97, 0x87, 0x58, 0x41, 0x5f, 0xc2, 0x6a, 0x2a, 0xfc, 0x68, 0x40, 0xf2, 0x12, 0x4f, 0x5f, 0x23,
	0xb9, 0x59, 0x12, 0x6b, 0x88, 0x62, 0x29, 0x35, 0x64, 0xd3, 0x42, 0x6a, 0x58, 0x0a, 0x39, 0x56,
	0xd0, 0x11, 0x3c, 0xc8, 0x32, 0x0e, 0xd2, 0x48, 0x01, 0x0d, 0xea, 0x1b, 0xa4, 0x88, 0x9e, 0x84,
	0x37, 0x92, 0x21, 0x41, 0x7d, 0x92, 0x43, 0xf1, 0xfa, 0x80, 0xe4, 0xb1, 0x33, 0x56, 0xd0, 0x8f,
	0xb0, 0x5e, 0x10, 0x51, 0xb4, 0x45, 0xae, 0xcf, 0x2f, 0x7d, 0x48, 0x6e, 0x48, 0x06, 0xac, 0xa0,
	0x67, 0x00, 0xf1, 0x27, 0x05, 0xe2, 0x01, 0x4d, 0xf7, 0x55, 0xfa, 0x23, 0xb2, 0xfc, 0xcd, 0x81,
	0x15, 0x74, 0x00, 0xbd, 0x74, 0xa7, 0x8f, 0xa2, 0x80, 0x64, 0x14, 0xac, 0x93, 0xfc, 0x4f, 0x82,
	0x58, 0x49, 0xdc, 0xb4, 0xa3, 0x28, 0x26, 0xb9, 0x4a, 0x96, 0xbb, 0x7b, 0xac, 0xa0, 0xaf, 0xe1,
	0xe1, 0x52, 0x37, 0x8c, 0x92, 0x31, 0xc9, 0xa8, 0xd2, 0x49, 0x61, 0xf3, 0x2c, 0x92, 0x27, 0xd5,
	0x98, 0xa2, 0x30, 0x51, 0x33, 0x5a, 0xd6, 0x48, 0x6e, 0xff, 0x2a, 0x34, 0xa4, 0x3a, 0x32, 0x14,
	0x06, 0x77, 0x49, 0x43, 0x6e, 0xa3, 0x89, 0x15, 0x64, 0x84, 0x7d, 0x40, 0xaa, 0xa7, 0x43, 0x9b,
	0xa4, 0xb8, 0xbf, 0xd4, 0xff, 0x47, 0xae, 0x69, 0x03, 0x45, 0x4a, 0x67, 0x5f, 0x5e, 0x90, 0x46,
	0x0a, 0x1e, 0x80, 0xf4, 0x0d, 0x52, 0xf4, 0x4c, 0x13, 0x3b, 0x3c, 0xad, 0x4b, 0x38, 0x3c, 0x57,
	0x99, 0x4e, 0x0a, 0x9f, 0x17, 0xb0, 0x82, 0x7e, 0x85, 0xed, 0x1b, 0x9f, 0x53, 0xd0, 0x63, 0x52,
	0xf6, 0xe1, 0x47, 0x7f, 0x87, 0x94, 0x7e, 0x9d, 0xc1, 0x0a, 0x32, 0x41, 0x2b, 0x7a, 0x49, 0x43,
	0x39, 0xf7, 0x27, 0x73, 0xd6, 0x36, 0xb9, 0xe9, 0x19, 0x0e, 0x2b, 0xe8, 0x5d, 0x68, 0x89, 0xc7,
	0x53, 0xd4, 0x23, 0xa9, 0x97, 0x57, 0xfd, 0x3e, 0x49, 0xbf, 0xaa, 0x62, 0xe5, 0xac, 0xc5, 0x9f,
	0x80, 0x3f, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x46, 0x9a, 0x98, 0x40, 0x16, 0x00, 0x00,
}
