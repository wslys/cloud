// Code generated by protoc-gen-go.
// source: beaconCloud/rpcServer/auth-srv/proto/account/account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	beaconCloud/rpcServer/auth-srv/proto/account/account.proto

It has these top-level messages:
	Record
	CurrentOAuthRequest
	CurrentOAuthResponse
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	// uuid
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// service or user
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// service name, username, etc
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	// we leave this blank in responses
	// used for update and create
	ClientSecret string            `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	Metadata     map[string]string `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// unix timestamp
	Created int64 `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	// unix timestamp
	Updated int64 `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type CurrentOAuthRequest struct {
	Scope  string   `protobuf:"bytes,1,opt,name=scope" json:"scope,omitempty"`
	Scopes []string `protobuf:"bytes,2,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *CurrentOAuthRequest) Reset()                    { *m = CurrentOAuthRequest{} }
func (m *CurrentOAuthRequest) String() string            { return proto.CompactTextString(m) }
func (*CurrentOAuthRequest) ProtoMessage()               {}
func (*CurrentOAuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CurrentOAuthResponse struct {
	Email            string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	UserId           string   `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AuthDomain       string   `protobuf:"bytes,3,opt,name=auth_domain,json=authDomain" json:"auth_domain,omitempty"`
	UserOrganization string   `protobuf:"bytes,4,opt,name=user_organization,json=userOrganization" json:"user_organization,omitempty"`
	IsAdmin          bool     `protobuf:"varint,5,opt,name=is_admin,json=isAdmin" json:"is_admin,omitempty"`
	ClientId         string   `protobuf:"bytes,6,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Scopes           []string `protobuf:"bytes,7,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *CurrentOAuthResponse) Reset()                    { *m = CurrentOAuthResponse{} }
func (m *CurrentOAuthResponse) String() string            { return proto.CompactTextString(m) }
func (*CurrentOAuthResponse) ProtoMessage()               {}
func (*CurrentOAuthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ReadResponse struct {
	Account *Record `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetAccount() *Record {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateRequest struct {
	// If id is blank, one will be generated
	Account *Record `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateRequest) GetAccount() *Record {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type UpdateRequest struct {
	// Id and client_id cannot be changed
	Account *Record `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetAccount() *Record {
	if m != nil {
		return m.Account
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SearchRequest struct {
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Limit    int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset   int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type SearchResponse struct {
	Accounts []*Record `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchResponse) GetAccounts() []*Record {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "account.Record")
	proto.RegisterType((*CurrentOAuthRequest)(nil), "account.CurrentOAuthRequest")
	proto.RegisterType((*CurrentOAuthResponse)(nil), "account.CurrentOAuthResponse")
	proto.RegisterType((*ReadRequest)(nil), "account.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "account.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "account.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "account.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "account.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "account.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "account.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "account.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "account.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "account.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
	CurrentOAuth(ctx context.Context, in *CurrentOAuthRequest, opts ...client.CallOption) (*CurrentOAuthResponse, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "account"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) CurrentOAuth(ctx context.Context, in *CurrentOAuthRequest, opts ...client.CallOption) (*CurrentOAuthResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.CurrentOAuth", in)
	out := new(CurrentOAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
	CurrentOAuth(context.Context, *CurrentOAuthRequest, *CurrentOAuthResponse) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AccountHandler.Read(ctx, in, out)
}

func (h *Account) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AccountHandler.Create(ctx, in, out)
}

func (h *Account) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AccountHandler.Update(ctx, in, out)
}

func (h *Account) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.AccountHandler.Delete(ctx, in, out)
}

func (h *Account) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.AccountHandler.Search(ctx, in, out)
}

func (h *Account) CurrentOAuth(ctx context.Context, in *CurrentOAuthRequest, out *CurrentOAuthResponse) error {
	return h.AccountHandler.CurrentOAuth(ctx, in, out)
}

func init() {
	proto.RegisterFile("beaconCloud/rpcServer/auth-srv/proto/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0xc6, 0x4e, 0x27, 0x4d, 0x08, 0x4b, 0x68, 0x4d, 0xa0, 0x6a, 0x14, 0x2e, 0x41,
	0x15, 0x8d, 0x54, 0x84, 0x44, 0x5b, 0x71, 0xa8, 0x52, 0x0e, 0x3d, 0x54, 0x95, 0x5c, 0x71, 0xae,
	0xb6, 0xde, 0x2d, 0x5d, 0x91, 0x78, 0xc3, 0xee, 0xba, 0x52, 0xb9, 0xf2, 0x2f, 0xf8, 0x7b, 0xfc,
	0x11, 0xb4, 0x5f, 0xae, 0xed, 0xc2, 0x01, 0x4e, 0xd9, 0x37, 0x33, 0xef, 0x65, 0x67, 0xde, 0xac,
	0xe1, 0xe8, 0x9a, 0xe2, 0x8c, 0xe7, 0xf3, 0x05, 0x2f, 0xc8, 0x4c, 0xac, 0xb2, 0x4b, 0x2a, 0xee,
	0xa8, 0x98, 0xe1, 0x42, 0xdd, 0xbe, 0x95, 0xe2, 0x6e, 0xb6, 0x12, 0x5c, 0xf1, 0x19, 0xce, 0x32,
	0x5e, 0xe4, 0xca, 0xff, 0xee, 0x9b, 0x28, 0x8a, 0x1d, 0x9c, 0xfc, 0x6c, 0x41, 0x94, 0xd2, 0x8c,
	0x0b, 0x82, 0xfa, 0xd0, 0x62, 0x24, 0x09, 0xc6, 0xc1, 0x74, 0x23, 0x6d, 0x31, 0x82, 0x10, 0xac,
	0xab, 0xfb, 0x15, 0x4d, 0x5a, 0x26, 0x62, 0xce, 0xe8, 0x25, 0x6c, 0x64, 0x0b, 0x46, 0x73, 0x75,
	0xc5, 0x48, 0x12, 0x9a, 0x44, 0xc7, 0x06, 0xce, 0x08, 0x7a, 0x0d, 0x3d, 0x97, 0x94, 0x34, 0x13,
	0x54, 0x25, 0xeb, 0xa6, 0x60, 0xd3, 0x06, 0x2f, 0x4d, 0x0c, 0x1d, 0x42, 0x67, 0x49, 0x15, 0x26,
	0x58, 0xe1, 0xa4, 0x3d, 0x0e, 0xa7, 0xdd, 0x83, 0x9d, 0x7d, 0x7f, 0x37, 0x7b, 0x91, 0xfd, 0x73,
	0x97, 0xff, 0x94, 0x2b, 0x71, 0x9f, 0x96, 0xe5, 0x28, 0x81, 0x38, 0x13, 0x14, 0x2b, 0x4a, 0x92,
	0x68, 0x1c, 0x4c, 0xc3, 0xd4, 0x43, 0x9d, 0x29, 0x56, 0xc4, 0x64, 0x62, 0x9b, 0x71, 0x70, 0x74,
	0x0c, 0xbd, 0x9a, 0x1c, 0x1a, 0x40, 0xf8, 0x95, 0xde, 0xbb, 0x36, 0xf5, 0x11, 0x0d, 0xa1, 0x7d,
	0x87, 0x17, 0x85, 0x6f, 0xd4, 0x82, 0xa3, 0xd6, 0x87, 0x60, 0x32, 0x87, 0x67, 0xf3, 0x42, 0x08,
	0x9a, 0xab, 0x8b, 0x93, 0x42, 0xdd, 0xa6, 0xf4, 0x5b, 0x41, 0xa5, 0xd2, 0x04, 0x99, 0xf1, 0x15,
	0x75, 0x22, 0x16, 0xa0, 0x2d, 0x88, 0xcc, 0x41, 0x26, 0xad, 0x71, 0x38, 0xdd, 0x48, 0x1d, 0x9a,
	0xfc, 0x0a, 0x60, 0x58, 0x57, 0x91, 0x2b, 0x9e, 0x4b, 0xaa, 0x65, 0xe8, 0x12, 0xb3, 0x85, 0x97,
	0x31, 0x00, 0x6d, 0x43, 0x5c, 0x48, 0x2a, 0xf4, 0x7c, 0xed, 0x7d, 0x22, 0x0d, 0xcf, 0x08, 0xda,
	0x85, 0xae, 0xb6, 0xf6, 0x8a, 0xf0, 0x25, 0x66, 0xb9, 0x1b, 0x3e, 0xe8, 0xd0, 0xa9, 0x89, 0xa0,
	0x3d, 0x78, 0x6a, 0x98, 0x5c, 0x7c, 0xc1, 0x39, 0xfb, 0x8e, 0x15, 0xe3, 0xb9, 0xb3, 0x60, 0xa0,
	0x13, 0x17, 0x95, 0x38, 0x7a, 0x01, 0x1d, 0x26, 0xaf, 0x30, 0x59, 0xb2, 0x3c, 0x69, 0x8f, 0x83,
	0x69, 0x27, 0x8d, 0x99, 0x3c, 0xd1, 0xb0, 0xee, 0x71, 0xd4, 0xf0, 0xf8, 0xa1, 0xcb, 0xb8, 0xd6,
	0xe5, 0x0e, 0x74, 0x53, 0x8a, 0x89, 0x1f, 0x51, 0x63, 0x97, 0x26, 0x87, 0xb0, 0x69, 0xd3, 0xae,
	0xf7, 0x37, 0xe0, 0x37, 0xd0, 0x14, 0x75, 0x0f, 0x9e, 0x34, 0x96, 0x20, 0x2d, 0x37, 0xf4, 0x08,
	0x7a, 0x73, 0x63, 0xb3, 0xd7, 0xfe, 0x07, 0xee, 0x00, 0xfa, 0x9e, 0x6b, 0xff, 0x58, 0xab, 0x7d,
	0x36, 0xab, 0xf1, 0x7f, 0x6a, 0x9e, 0xeb, 0xd4, 0x76, 0xa1, 0x77, 0x4a, 0x17, 0xf4, 0x41, 0xad,
	0xd9, 0xf7, 0x00, 0xfa, 0xbe, 0xc0, 0x51, 0x72, 0xe8, 0x5d, 0x52, 0x2c, 0xb2, 0x72, 0x9b, 0x6a,
	0xe3, 0x0e, 0x1a, 0xe3, 0xfe, 0xd3, 0x1b, 0x1c, 0x42, 0x7b, 0xc1, 0x96, 0x4c, 0x99, 0x15, 0x08,
	0x53, 0x0b, 0xb4, 0x31, 0xfc, 0xe6, 0x46, 0xba, 0x57, 0x17, 0xa6, 0x0e, 0x4d, 0x3e, 0x42, 0xdf,
	0xff, 0x9f, 0x9b, 0xfd, 0x1e, 0x74, 0x5c, 0x47, 0x32, 0x09, 0xcc, 0x0b, 0x7c, 0xd4, 0x72, 0x59,
	0x70, 0xf0, 0x23, 0x84, 0xf8, 0xc4, 0x02, 0xf4, 0x1e, 0xd6, 0xb5, 0x89, 0x68, 0x58, 0x29, 0x2f,
	0x2d, 0x1f, 0x3d, 0x6f, 0x44, 0x5d, 0xbf, 0x6b, 0xe8, 0x18, 0x22, 0x6b, 0x02, 0xda, 0x2a, 0x4b,
	0x6a, 0x8e, 0x8e, 0xb6, 0x1f, 0xc5, 0xab, 0x64, 0x3b, 0xf3, 0x0a, 0xb9, 0x66, 0x60, 0x85, 0xdc,
	0x30, 0xc7, 0x90, 0xed, 0xf4, 0x2b, 0xe4, 0x9a, 0x5f, 0x15, 0x72, 0xc3, 0x26, 0x43, 0xb6, 0x83,
	0xab, 0x90, 0x6b, 0xce, 0x55, 0xc8, 0xf5, 0x09, 0x4f, 0xd6, 0xd0, 0x39, 0x6c, 0x56, 0xdf, 0x3c,
	0x7a, 0xf5, 0xd0, 0xe1, 0xe3, 0x0f, 0xca, 0x68, 0xe7, 0x2f, 0x59, 0x2f, 0x77, 0x1d, 0x99, 0xaf,
	0xf6, 0xbb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xa6, 0x77, 0xc5, 0xf3, 0x05, 0x00, 0x00,
}
